{"ast":null,"code":"var _jsxFileName = \"/Users/luke.mackenzie/Documents/personal/nextjs/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport Markdown from \"react-markdown\";\nexport default function Post() {\n  var router = useRouter();\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-243598287\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, router.query.id), React.createElement(\"div\", {\n    className: \"jsx-243598287\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Markdown, {\n    source: \"\\nThis is our blog post.\\nYes. We can have a [link](/link).\\nAnd we can have a title as well.\\n\\n### This is a title\\n\\nAnd here's the content.\\n      \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(_JSXStyle, {\n    id: \"243598287\",\n    __self: this\n  }, \".markdown{font-family:\\\"Arial\\\";}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWtlLm1hY2tlbnppZS9Eb2N1bWVudHMvcGVyc29uYWwvbmV4dGpzL3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1QnlCLEFBRytCLEFBSUMsQUFLVCxBQUlILFNBQ0MsR0FKWixPQUsyQixDQWQzQix3QkFlQSxNQVhhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL2x1a2UubWFja2VuemllL0RvY3VtZW50cy9wZXJzb25hbC9uZXh0anMvcGFnZXMvcC9baWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0xheW91dFwiO1xuaW1wb3J0IE1hcmtkb3duIGZyb20gXCJyZWFjdC1tYXJrZG93blwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQb3N0KCkge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8aDE+e3JvdXRlci5xdWVyeS5pZH08L2gxPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXJrZG93blwiPlxuICAgICAgICA8TWFya2Rvd25cbiAgICAgICAgICBzb3VyY2U9e2BcblRoaXMgaXMgb3VyIGJsb2cgcG9zdC5cblllcy4gV2UgY2FuIGhhdmUgYSBbbGlua10oL2xpbmspLlxuQW5kIHdlIGNhbiBoYXZlIGEgdGl0bGUgYXMgd2VsbC5cblxuIyMjIFRoaXMgaXMgYSB0aXRsZVxuXG5BbmQgaGVyZSdzIHRoZSBjb250ZW50LlxuICAgICAgYH1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgLm1hcmtkb3duIHtcbiAgICAgICAgICBmb250LWZhbWlseTogXCJBcmlhbFwiO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIGEge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYXJrZG93biBhOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIH1cblxuICAgICAgICAubWFya2Rvd24gaDMge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn1cblxuLy8gSGF2aW5nIGJyYWNrZXRzIChbXSkgaW4gdGhlIHBhZ2UgbmFtZSBtYWtlcyBpdCBhIGR5bmFtaWMgcm91dGVcblxuLy8gY29uc3QgUG9zdCA9IHByb3BzID0+IChcbi8vICAgPExheW91dD5cbi8vICAgICA8aDE+e3Byb3BzLnNob3cubmFtZX08L2gxPlxuLy8gICAgIDxwPntwcm9wcy5zaG93LnN1bW1hcnkucmVwbGFjZSgvPFsvXT9wPi9nLCBcIlwiKX08L3A+XG4vLyAgICAgPGltZyBzcmM9e3Byb3BzLnNob3cuaW1hZ2UubWVkaXVtfSAvPlxuLy8gICA8L0xheW91dD5cbi8vICk7XG5cbi8vIFBvc3QuZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oY29udGV4dCkge1xuLy8gICAvLyB0aGUgJ2NvbnRleHQnIG9iamVjdCBoYXMgYSAncXVlcnknIG9iamVjdCB3ZSBjYW4gdXNlIHRvIGZldGNoIGluZm9ybWF0aW9uXG4vLyAgIGNvbnN0IHsgaWQgfSA9IGNvbnRleHQucXVlcnk7XG4vLyAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS50dm1hemUuY29tL3Nob3dzLyR7aWR9YCk7XG4vLyAgIGNvbnN0IHNob3cgPSBhd2FpdCByZXMuanNvbigpO1xuXG4vLyAgIGNvbnNvbGUubG9nKGBGZXRjaGVkIHNob3c6ICR7c2hvdy5uYW1lfWApO1xuXG4vLyAgIHJldHVybiB7IHNob3cgfTtcbi8vIH07XG4vLyBleHBvcnQgZGVmYXVsdCBQb3N0O1xuIl19 */\\n/*@ sourceURL=/Users/luke.mackenzie/Documents/personal/nextjs/pages/p/[id].js */\"));\n} // Having brackets ([]) in the page name makes it a dynamic route\n// const Post = props => (\n//   <Layout>\n//     <h1>{props.show.name}</h1>\n//     <p>{props.show.summary.replace(/<[/]?p>/g, \"\")}</p>\n//     <img src={props.show.image.medium} />\n//   </Layout>\n// );\n// Post.getInitialProps = async function(context) {\n//   // the 'context' object has a 'query' object we can use to fetch information\n//   const { id } = context.query;\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//   const show = await res.json();\n//   console.log(`Fetched show: ${show.name}`);\n//   return { show };\n// };\n// export default Post;","map":{"version":3,"sources":["/Users/luke.mackenzie/Documents/personal/nextjs/pages/p/[id].js"],"names":["useRouter","Layout","Markdown","Post","router","query","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADF,EAEE;AAAA,uCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,MAAM,2JADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAAA;AAAA;AAAA,gzFADF;AAsCD,C,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport Markdown from \"react-markdown\";\n\nexport default function Post() {\n  const router = useRouter();\n\n  return (\n    <Layout>\n      <h1>{router.query.id}</h1>\n      <div className=\"markdown\">\n        <Markdown\n          source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as well.\n\n### This is a title\n\nAnd here's the content.\n      `}\n        />\n      </div>\n      <style jsx global>{`\n        .markdown {\n          font-family: \"Arial\";\n        }\n\n        .markdown a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        .markdown a:hover {\n          opacity: 0.6;\n        }\n\n        .markdown h3 {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n\n// Having brackets ([]) in the page name makes it a dynamic route\n\n// const Post = props => (\n//   <Layout>\n//     <h1>{props.show.name}</h1>\n//     <p>{props.show.summary.replace(/<[/]?p>/g, \"\")}</p>\n//     <img src={props.show.image.medium} />\n//   </Layout>\n// );\n\n// Post.getInitialProps = async function(context) {\n//   // the 'context' object has a 'query' object we can use to fetch information\n//   const { id } = context.query;\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//   const show = await res.json();\n\n//   console.log(`Fetched show: ${show.name}`);\n\n//   return { show };\n// };\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}