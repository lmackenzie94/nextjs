{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport withLayout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\"; // const PostLink = props => (\n//   <li>\n//     {/* here we are passing data via a query string parameter (i.e. 'title') */}\n//     <Link href={`/post?title=${props.title}`}>\n//       <a>{props.title}</a>\n//     </Link>\n//     {/* 'as' defines the URL to show */}\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Learn Next.js is awesome\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//         <PostLink id=\"id: Hello Next.js\" />\n//         <PostLink id=\"id: Learn Next.js is awesome\" />\n//         <PostLink id=\"id: Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// export default withLayout(Blog);\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n// Index.getInitialProps = async function() {\n//   const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n//   const data = await res.json();\n//   // this will print on the SERVER console, not the browser console.\n//   // That's because we render the page on the server. So, we already have the data and there is no reason to fetch it again in the client.\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n// export default Index;\n// STYLING EXAMPLE\n\nfunction getPosts() {\n  return [{\n    id: \"hello-nextjs\",\n    title: \"Hello Next.js\"\n  }, {\n    id: \"learn-nextjs\",\n    title: \"Learn Next.js is awesome\"\n  }, {\n    id: \"deploy-nextjs\",\n    title: \"Deploy apps with ZEIT\"\n  }];\n}\n\nvar PostLink = function PostLink(_ref) {\n  var post = _ref.post;\n  return React.createElement(\"li\", {\n    className: \"jsx-3950785544\"\n  }, React.createElement(Link, {\n    href: \"/p/[id]\",\n    as: \"/p/\".concat(post.id)\n  }, React.createElement(\"a\", {\n    className: \"jsx-3950785544\"\n  }, post.title)), React.createElement(_JSXStyle, {\n    id: \"3950785544\"\n  }, [\"li.jsx-3950785544{list-style:none;margin:5px 0;}\", \"a.jsx-3950785544{-webkit-text-decoration:none;text-decoration:none;color:blue;font-family:\\\"Arial\\\";}\", \"a.jsx-3950785544:hover{opacity:0.6;}\"]));\n};\n\nexport default function Blog() {\n  var opacity = 0.6;\n  return React.createElement(Layout, null, React.createElement(\"h1\", {\n    className: _JSXStyle.dynamic([[\"4013636451\", [opacity]]])\n  }, \"My Blog\"), React.createElement(\"ul\", {\n    className: _JSXStyle.dynamic([[\"4013636451\", [opacity]]])\n  }, getPosts().map(function (post) {\n    return React.createElement(PostLink, {\n      key: post.id,\n      post: post\n    });\n  })), React.createElement(_JSXStyle, {\n    id: \"4013636451\",\n    dynamic: [opacity]\n  }, [\"h1.__jsx-style-dynamic-selector,a.__jsx-style-dynamic-selector{font-family:\\\"Arial\\\";}\", \"ul.__jsx-style-dynamic-selector{padding:0;}\", \"li.__jsx-style-dynamic-selector{list-style:none;margin:5px 0;}\", \"a.__jsx-style-dynamic-selector{-webkit-text-decoration:none;text-decoration:none;color:blue;}\", \"a.__jsx-style-dynamic-selector:hover{opacity:\".concat(opacity, \";}\")]));\n}","map":null,"metadata":{},"sourceType":"module"}