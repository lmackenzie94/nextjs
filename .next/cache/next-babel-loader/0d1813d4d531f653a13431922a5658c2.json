{"ast":null,"code":"var _jsxFileName = \"/Users/luke.mackenzie/Documents/personal/nextjs/pages/index.js\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport withLayout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\"; // const PostLink = props => (\n//   <li>\n//     {/* here we are passing data via a query string parameter (i.e. 'title') */}\n//     <Link href={`/post?title=${props.title}`}>\n//       <a>{props.title}</a>\n//     </Link>\n//     {/* 'as' defines the URL to show */}\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Learn Next.js is awesome\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//         <PostLink id=\"id: Hello Next.js\" />\n//         <PostLink id=\"id: Learn Next.js is awesome\" />\n//         <PostLink id=\"id: Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// export default withLayout(Blog);\n\nconst Index = props => React.createElement(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"Batman TV Shows\"), React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, props.shows.map(show => React.createElement(\"li\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, show.name))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json(); // this will print on the SERVER console, not the browser console.\n  // That's because we render the page on the server. So, we already have the data and there is no reason to fetch it again in the client.\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/luke.mackenzie/Documents/personal/nextjs/pages/index.js"],"names":["Link","Layout","withLayout","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CAFF,CADF;;AAeAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CAFuC,CAIvC;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASW,KAAK,IAAIA,KAAK,CAACV,IAAxB;AADF,GAAP;AAGD,CAXD;;AAaA,eAAeJ,KAAf","sourcesContent":["import Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport withLayout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\n\n// const PostLink = props => (\n//   <li>\n//     {/* here we are passing data via a query string parameter (i.e. 'title') */}\n//     <Link href={`/post?title=${props.title}`}>\n//       <a>{props.title}</a>\n//     </Link>\n//     {/* 'as' defines the URL to show */}\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Learn Next.js is awesome\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//         <PostLink id=\"id: Hello Next.js\" />\n//         <PostLink id=\"id: Learn Next.js is awesome\" />\n//         <PostLink id=\"id: Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n// export default withLayout(Blog);\n\nconst Index = props => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n\n  // this will print on the SERVER console, not the browser console.\n  // That's because we render the page on the server. So, we already have the data and there is no reason to fetch it again in the client.\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}