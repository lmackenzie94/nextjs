{"ast":null,"code":"var _jsxFileName = \"/Users/luke.mackenzie/Documents/personal/nextjs/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport withLayout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\"; // const PostLink = props => (\n//   <li>\n//     {/* here we are passing data via a query string parameter (i.e. 'title') */}\n//     <Link href={`/post?title=${props.title}`}>\n//       <a>{props.title}</a>\n//     </Link>\n//     {/* 'as' defines the URL to show */}\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Learn Next.js is awesome\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//         <PostLink id=\"id: Hello Next.js\" />\n//         <PostLink id=\"id: Learn Next.js is awesome\" />\n//         <PostLink id=\"id: Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n// export default withLayout(Blog);\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n// Index.getInitialProps = async function() {\n//   const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n//   const data = await res.json();\n//   // this will print on the SERVER console, not the browser console.\n//   // That's because we render the page on the server. So, we already have the data and there is no reason to fetch it again in the client.\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n// export default Index;\n// STYLING EXAMPLE\n\nfunction getPosts() {\n  return [{\n    id: \"hello-nextjs\",\n    title: \"Hello Next.js\"\n  }, {\n    id: \"learn-nextjs\",\n    title: \"Learn Next.js is awesome\"\n  }, {\n    id: \"deploy-nextjs\",\n    title: \"Deploy apps with ZEIT\"\n  }];\n}\n\nexport default function Blog() {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-54248457\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"My Blog\"), React.createElement(\"ul\", {\n    className: \"jsx-54248457\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, getPosts().map(post => React.createElement(\"li\", {\n    key: post.id,\n    className: \"jsx-54248457\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${post.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"jsx-54248457\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, post.title))))), React.createElement(_JSXStyle, {\n    id: \"54248457\",\n    __self: this\n  }, \"h1.jsx-54248457,a.jsx-54248457{font-family:\\\"Arial\\\";}ul.jsx-54248457{padding:0;}li.jsx-54248457{list-style:none;margin:5px 0;}a.jsx-54248457{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-54248457:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWtlLm1hY2tlbnppZS9Eb2N1bWVudHMvcGVyc29uYWwvbmV4dGpzL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVGa0IsQUFJK0IsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJkLEVBY0EsSUFWZSxJQVJmLFNBU0EscUJBSWEsV0FDYiIsImZpbGUiOiIvVXNlcnMvbHVrZS5tYWNrZW56aWUvRG9jdW1lbnRzL3BlcnNvbmFsL25leHRqcy9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XG5pbXBvcnQgd2l0aExheW91dCBmcm9tIFwiLi4vY29tcG9uZW50cy9MYXlvdXRcIjtcbmltcG9ydCBmZXRjaCBmcm9tIFwiaXNvbW9ycGhpYy11bmZldGNoXCI7XG5cbi8vIGNvbnN0IFBvc3RMaW5rID0gcHJvcHMgPT4gKFxuLy8gICA8bGk+XG4vLyAgICAgey8qIGhlcmUgd2UgYXJlIHBhc3NpbmcgZGF0YSB2aWEgYSBxdWVyeSBzdHJpbmcgcGFyYW1ldGVyIChpLmUuICd0aXRsZScpICovfVxuLy8gICAgIDxMaW5rIGhyZWY9e2AvcG9zdD90aXRsZT0ke3Byb3BzLnRpdGxlfWB9PlxuLy8gICAgICAgPGE+e3Byb3BzLnRpdGxlfTwvYT5cbi8vICAgICA8L0xpbms+XG4vLyAgICAgey8qICdhcycgZGVmaW5lcyB0aGUgVVJMIHRvIHNob3cgKi99XG4vLyAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7cHJvcHMuaWR9YH0+XG4vLyAgICAgICA8YT57cHJvcHMuaWR9PC9hPlxuLy8gICAgIDwvTGluaz5cbi8vICAgPC9saT5cbi8vICk7XG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCbG9nKCkge1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICA8aDE+TXkgQmxvZzwvaDE+XG4vLyAgICAgICA8dWw+XG4vLyAgICAgICAgIDxQb3N0TGluayB0aXRsZT1cIkhlbGxvIE5leHQuanNcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgdGl0bGU9XCJMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWVcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgdGl0bGU9XCJEZXBsb3kgYXBwcyB3aXRoIFplaXRcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgaWQ9XCJpZDogSGVsbG8gTmV4dC5qc1wiIC8+XG4vLyAgICAgICAgIDxQb3N0TGluayBpZD1cImlkOiBMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWVcIiAvPlxuLy8gICAgICAgICA8UG9zdExpbmsgaWQ9XCJpZDogRGVwbG95IGFwcHMgd2l0aCBaZWl0XCIgLz5cbi8vICAgICAgIDwvdWw+XG4vLyAgICAgPC9MYXlvdXQ+XG4vLyAgICk7XG4vLyB9XG5cbi8vIGV4cG9ydCBkZWZhdWx0IHdpdGhMYXlvdXQoQmxvZyk7XG5cbi8vIGNvbnN0IEluZGV4ID0gcHJvcHMgPT4gKFxuLy8gICA8TGF5b3V0PlxuLy8gICAgIDxoMT5CYXRtYW4gVFYgU2hvd3M8L2gxPlxuLy8gICAgIDx1bD5cbi8vICAgICAgIHtwcm9wcy5zaG93cy5tYXAoc2hvdyA9PiAoXG4vLyAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxuLy8gICAgICAgICAgIDxMaW5rIGhyZWY9XCIvcC9baWRdXCIgYXM9e2AvcC8ke3Nob3cuaWR9YH0+XG4vLyAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbi8vICAgICAgICAgICA8L0xpbms+XG4vLyAgICAgICAgIDwvbGk+XG4vLyAgICAgICApKX1cbi8vICAgICA8L3VsPlxuLy8gICA8L0xheW91dD5cbi8vICk7XG5cbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuLy8gICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuXCIpO1xuLy8gICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuLy8gICAvLyB0aGlzIHdpbGwgcHJpbnQgb24gdGhlIFNFUlZFUiBjb25zb2xlLCBub3QgdGhlIGJyb3dzZXIgY29uc29sZS5cbi8vICAgLy8gVGhhdCdzIGJlY2F1c2Ugd2UgcmVuZGVyIHRoZSBwYWdlIG9uIHRoZSBzZXJ2ZXIuIFNvLCB3ZSBhbHJlYWR5IGhhdmUgdGhlIGRhdGEgYW5kIHRoZXJlIGlzIG5vIHJlYXNvbiB0byBmZXRjaCBpdCBhZ2FpbiBpbiB0aGUgY2xpZW50LlxuLy8gICBjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuXG4vLyAgIHJldHVybiB7XG4vLyAgICAgc2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG4vLyAgIH07XG4vLyB9O1xuXG4vLyBleHBvcnQgZGVmYXVsdCBJbmRleDtcblxuLy8gU1RZTElORyBFWEFNUExFXG5mdW5jdGlvbiBnZXRQb3N0cygpIHtcbiAgcmV0dXJuIFtcbiAgICB7IGlkOiBcImhlbGxvLW5leHRqc1wiLCB0aXRsZTogXCJIZWxsbyBOZXh0LmpzXCIgfSxcbiAgICB7IGlkOiBcImxlYXJuLW5leHRqc1wiLCB0aXRsZTogXCJMZWFybiBOZXh0LmpzIGlzIGF3ZXNvbWVcIiB9LFxuICAgIHsgaWQ6IFwiZGVwbG95LW5leHRqc1wiLCB0aXRsZTogXCJEZXBsb3kgYXBwcyB3aXRoIFpFSVRcIiB9XG4gIF07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJsb2coKSB7XG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxoMT5NeSBCbG9nPC9oMT5cbiAgICAgIDx1bD5cbiAgICAgICAge2dldFBvc3RzKCkubWFwKHBvc3QgPT4gKFxuICAgICAgICAgIDxsaSBrZXk9e3Bvc3QuaWR9PlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7cG9zdC5pZH1gfT5cbiAgICAgICAgICAgICAgPGE+e3Bvc3QudGl0bGV9PC9hPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgICkpfVxuICAgICAgPC91bD5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgaDEsXG4gICAgICAgIGEge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkFyaWFsXCI7XG4gICAgICAgIH1cblxuICAgICAgICB1bCB7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgIG1hcmdpbjogNXB4IDA7XG4gICAgICAgIH1cblxuICAgICAgICBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBhOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/luke.mackenzie/Documents/personal/nextjs/pages/index.js */\"));\n}","map":{"version":3,"sources":["/Users/luke.mackenzie/Documents/personal/nextjs/pages/index.js"],"names":["Link","Layout","withLayout","fetch","getPosts","id","title","Blog","map","post"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AACA,SAASC,QAAT,GAAoB;AAClB,SAAO,CACL;AAAEC,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHK,CAAP;AAKD;;AAED,eAAe,SAASC,IAAT,GAAgB;AAC7B,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,GAAGI,GAAX,CAAeC,IAAI,IAClB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKI,IAAI,CAACJ,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,IAAI,CAACH,KAAT,CADF,CADF,CADD,CADH,CAFF;AAAA;AAAA;AAAA,qoJADF;AAsCD","sourcesContent":["import Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport withLayout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\n\n// const PostLink = props => (\n//   <li>\n//     {/* here we are passing data via a query string parameter (i.e. 'title') */}\n//     <Link href={`/post?title=${props.title}`}>\n//       <a>{props.title}</a>\n//     </Link>\n//     {/* 'as' defines the URL to show */}\n//     <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\n//       <a>{props.id}</a>\n//     </Link>\n//   </li>\n// );\n// export default function Blog() {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <ul>\n//         <PostLink title=\"Hello Next.js\" />\n//         <PostLink title=\"Learn Next.js is awesome\" />\n//         <PostLink title=\"Deploy apps with Zeit\" />\n//         <PostLink id=\"id: Hello Next.js\" />\n//         <PostLink id=\"id: Learn Next.js is awesome\" />\n//         <PostLink id=\"id: Deploy apps with Zeit\" />\n//       </ul>\n//     </Layout>\n//   );\n// }\n\n// export default withLayout(Blog);\n\n// const Index = props => (\n//   <Layout>\n//     <h1>Batman TV Shows</h1>\n//     <ul>\n//       {props.shows.map(show => (\n//         <li key={show.id}>\n//           <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//             <a>{show.name}</a>\n//           </Link>\n//         </li>\n//       ))}\n//     </ul>\n//   </Layout>\n// );\n\n// Index.getInitialProps = async function() {\n//   const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n//   const data = await res.json();\n\n//   // this will print on the SERVER console, not the browser console.\n//   // That's because we render the page on the server. So, we already have the data and there is no reason to fetch it again in the client.\n//   console.log(`Show data fetched. Count: ${data.length}`);\n\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n\n// export default Index;\n\n// STYLING EXAMPLE\nfunction getPosts() {\n  return [\n    { id: \"hello-nextjs\", title: \"Hello Next.js\" },\n    { id: \"learn-nextjs\", title: \"Learn Next.js is awesome\" },\n    { id: \"deploy-nextjs\", title: \"Deploy apps with ZEIT\" }\n  ];\n}\n\nexport default function Blog() {\n  return (\n    <Layout>\n      <h1>My Blog</h1>\n      <ul>\n        {getPosts().map(post => (\n          <li key={post.id}>\n            <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\n              <a>{post.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <style jsx>{`\n        h1,\n        a {\n          font-family: \"Arial\";\n        }\n\n        ul {\n          padding: 0;\n        }\n\n        li {\n          list-style: none;\n          margin: 5px 0;\n        }\n\n        a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        a:hover {\n          opacity: 0.6;\n        }\n      `}</style>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}