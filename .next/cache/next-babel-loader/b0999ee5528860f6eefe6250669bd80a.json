{"ast":null,"code":"var _jsxFileName = \"/Users/luke.mackenzie/Documents/personal/nextjs/pages/p/[id].js\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\"; // export default function Post() {\n//   const router = useRouter();\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// }\n// Having brackets ([]) in the page name makes it a dynamic route\n\nconst Post = props => React.createElement(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.show.name), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, props.show.summary.replace(/<[/]?p>/g, \"\")), React.createElement(\"img\", {\n  src: props.show.image.medium,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}));\n\nPost.getInitialProps = async function (context) {\n  // the 'context' object has a 'query' object we can use to fetch information\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`Fetched show: ${show.name}`);\n  return {\n    show\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/luke.mackenzie/Documents/personal/nextjs/pages/p/[id].js"],"names":["useRouter","Layout","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","fetch","json","console","log"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAChB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,UAA3B,EAAuC,EAAvC,CAAJ,CAFF,EAGE;AAAK,EAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF;;AAQAP,IAAI,CAACQ,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAA+BH,EAAG,EAApC,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMU,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBd,IAAI,CAACC,IAAK,EAAvC;AAEA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD,CATD;;AAUA,eAAeF,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\n\n// export default function Post() {\n//   const router = useRouter();\n\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// }\n\n// Having brackets ([]) in the page name makes it a dynamic route\n\nconst Post = props => (\n  <Layout>\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary.replace(/<[/]?p>/g, \"\")}</p>\n    <img src={props.show.image.medium} />\n  </Layout>\n);\n\nPost.getInitialProps = async function(context) {\n  // the 'context' object has a 'query' object we can use to fetch information\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}